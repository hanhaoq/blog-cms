{"remainingRequest":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\babel-loader\\lib\\index.js!D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\src\\views\\dashboard\\index.vue","mtime":1706837939480},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\babel.config.js","mtime":1675543272000},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\zzzz\\Hhq_blog\\blog-cms\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}